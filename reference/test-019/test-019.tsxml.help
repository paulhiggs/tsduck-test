
Test tool for TSDuck XML manipulation

Usage: tsxml [options] [input-file ...]

Any input XML file name can be replaced with "inline XML content", starting
with "<?xml".

Parameters:

  Specify the list of input files. If any is specified as '-', the standard
  input is used.

Options:

  --attributes-merge name
      With --merge, specify how attributes are processed in merged node. The
      default is "add", meaning that new attributes are added, others are
      ignored.
      The 'name' must be one of "add", "none", "replace".

  -c
  --channel
      A shortcut for '--model tsduck.channels.model.xml'. It verifies that the
      input files are valid channel configuration files.

  -d[level]
  --debug[=level]
      Produce debug traces. The default level is 1. Higher levels produce more
      messages.

  -e
  --expand-environment
      Expand environment variables in the input XML files. Environment
      variables must be referenced as '${name}'. See also option
      --expand-patch-xml for patch files.

  --expand-patch-xml
      With --patch, expand all environment variables in the patch files before
      patching. Environment variables must be referenced as '${name}'. See also
      option --expand-environment for input XML files.

  -f
  --from-json
      Each input file must be a JSON file, typically from a previous automated
      XML-to-JSON conversion or in a similar format. A reverse conversion is
      first performed and the resulting XML document is processed as input.

  --help
      Display this help text.

  -h
  --hf-band
      A shortcut for '--model tsduck.hfbands.model.xml'. It verifies that the
      input files are valid HF bands definition files.

  -i value
  --indent value
      Specify the indentation size of output files. The default is 2.

  -j
  --json
      Perform an automated XML-to-JSON conversion. The output file is in JSON
      format instead of XML.

  --json-buffer-size value
      With --json-tcp or --json-udp, specify the network socket send buffer
      size in bytes.

  --json-line[='prefix']
      Perform an automated XML-to-JSON conversion. The output file is in JSON
      format instead of XML. Report the JSON text as one single line in the
      message logger. The optional string parameter specifies a prefix to
      prepend on the log line before the JSON text to locate the appropriate
      line in the logs.

  --json-tcp ip-address:port
      Perform an automated XML-to-JSON conversion. The output file is in JSON
      format instead of XML. Report the JSON text as one single line in a TCP
      connection. The address specifies an IP address or a host name that
      translates to an IP address. The port specifies the destination TCP port.
      By default, a new TCP connection is established each time a JSON message
      is produced. Be aware that a complete TCP connection cycle may introduce
      some latency in the processing. If latency is an issue, consider using
      --json-udp.

  --json-tcp-keep
      With --json-tcp, keep the TCP connection open for all JSON messages. By
      default, a new TCP connection is established each time a JSON message is
      produced.

  --json-udp ip-address:port
      Perform an automated XML-to-JSON conversion. The output file is in JSON
      format instead of XML. Report the JSON text as one single line in a UDP
      datagram. The address specifies an IP address which can be either unicast
      or multicast. It can be also a host name that translates to an IP
      address. The port specifies the destination UDP port. Be aware that the
      size of UDP datagrams is limited by design to 64 kB. If larger JSON
      contents are expected, consider using --json-tcp.

  --json-udp-local ip-address
      With --json-udp, when the destination is a multicast address, specify the
      IP address of the outgoing local interface. It can be also a host name
      that translates to a local address.

  --json-udp-ttl value
      With --json-udp, specifies the TTL (Time-To-Live) socket option. The
      actual option is either "Unicast TTL" or "Multicast TTL", depending on
      the destination address. Remember that the default Multicast TTL is 1 on
      most systems.

  -l
  --lnb
      A shortcut for '--model tsduck.lnbs.model.xml'. It verifies that the
      input files are valid satellite LNB definition files.

  --merge
      Merge all input files as one, instead of processing all input files one
      by one. With this option, all input XML files must have the same root
      tag.

  -m filename
  --model filename
      Specify an XML model file which is used to validate all input files.

  --monitor
      A shortcut for '--model tscore.monitor.model.xml'. It verifies that the
      input files are valid system monitoring configuration files.

  -o filename
  --output filename
      Specify the name of the output file (standard output by default). An
      output file is produced only if --patch, --reformat or --json are
      specified.

  -p filename
  --patch filename
      Specify an XML patch file. All operations which are specified in this
      file are applied on each input file. Several --patch options can be
      specified. Patch files are sequentially applied on each input file.

  -r
  --reformat
      Reformat the input XML files according to the default XML layout for
      TSDuck XML files. This option is useful to generate an expected output
      file format. If more than one input file is specified, they are all
      reformatted in the same output file.

  -s name
  --sort name
      Specify that the sub-elements of all XML structures with the specified
      tag name will be sorted in alphanumerical order. Several --sort options
      can be specified.

  --strict-xml
      Save XML documents in strictly conformant XML format. By default, do not
      escape characters when this is not syntactically necessary to make the
      XML text more human-readable.

  -t
  --tables
      A shortcut for '--model tsduck.tables.model.xml'. Table definitions for
      installed TSDuck extensions are also merged in the main model. It
      verifies that the input files are valid PSI/SI tables files.

  --uncomment
      Remove comments from the XML documents.

  -v
  --verbose
      Produce verbose output.

  --version[=name]
      Display the TSDuck version number.
      The 'name' must be one of "acceleration", "all", "bitrate", "compiler",
      "crypto", "date", "dektec", "http", "integer", "long", "rist", "short",
      "srt", "system", "vatek", "zlib".

  --x2j-collapse-text
      In the XML-to-JSON conversion, remove leading and trailing spaces and
      replace all other sequences of space characters by one single space in
      all text nodes. By default, text nodes are collapsed only when there is
      an XML model which identifies the text node as containing hexadecimal
      content.

  --x2j-enforce-boolean
      In the XML-to-JSON conversion, when an element attribute contains a
      boolean value but there is no XML model file to tell if this is really a
      boolean, force the creation of a JSON boolean. By default, when there is
      no XML model, all element attributes are converted as JSON strings.

  --x2j-enforce-integer
      In the XML-to-JSON conversion, when an element attribute contains an
      integer value but there is no XML model file to tell if this is really an
      integer, force the creation of a JSON number. By default, when there is
      no XML model, all element attributes are converted as JSON strings.

  --x2j-include-root
      In the XML-to-JSON conversion, keep the root of the XML document as a
      JSON object. By default, the JSON document is made of an array of all XML
      elements under the root.

  --x2j-trim-text
      In the XML-to-JSON conversion, remove leading and trailing spaces in all
      text nodes. By default, text nodes are trimmed only when there is an XML
      model which identifies the text node as containing hexadecimal content.

  --xml-line[='prefix']
      Log each table as one single XML line in the message logger instead of an
      output file. The optional string parameter specifies a prefix to prepend
      on the log line before the XML text to locate the appropriate line in the
      logs.

