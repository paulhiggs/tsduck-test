
Extract MPE (Multi-Protocol Encapsulation) datagrams

Usage: tsp -P mpe [options]

Options:

  -a
  --append
      With --output-file, if the file already exists, append to the end of the
      file. By default, existing files are overwritten.

  -d ip-address[:port]
  --destination ip-address[:port]
      Filter MPE UDP datagrams based on the specified destination IP address.

  --dump-datagram
      With --log or --log-hexa-line, dump each complete network datagram.

  --dump-max value
      With --dump-datagram, --dump-udp or --log-hexa-line, specify the maximum
      number of bytes to dump. By default, dump everything.

  --dump-udp
      With --log or --log-hexa-line, dump the UDP payload of each network
      datagram.

  --event-code value
      This option is for C++, Java or Python developers only.

      Signal a plugin event with the specified code for each MPE packet. The
      event data is an instance of PluginEventData pointing to the network
      datagram (default) or UDP payload (with --dump-udp).

  --except-label label1[-label2]
      Invoke this plugin only for packets without any of the specified labels.
      Other packets are transparently passed to the next plugin, without going
      through this one. Several --except-label options may be specified. See
      also option --only-label. This is a generic option which is defined in
      all packet processing plugins.

  --help
      Display this help text.

  --local-address address
      With --udp-forward, specify the IP address of the outgoing local
      interface for multicast traffic. It can be also a host name that
      translates to a local address.

  --local-port value
      With --udp-forward, specify the local UDP source port for outgoing
      packets. By default, a random source port is used.

  -l
  --log
      Log all MPE datagrams using a short summary for each of them.

  --log-hexa-line[='prefix']
      Same as --log but log the full content of each datagram as one single
      hexadecimal line in the message logger. Dump either the full datagram
      (the default) or the UDP payload (with --dump-udp). The optional string
      parameter specifies a prefix to prepend on the log line before the
      hexadecimal text to locate the appropriate line in the logs.

  -m value
  --max-datagram value
      Specify the maximum number of datagrams to extract, then stop. By
      default, all datagrams are extracted.

  --max-net-size value
      Specify the maximum size in bytes of the network datagrams to filter.

  --max-udp-size value
      Specify the maximum size in bytes of the UDP datagrams to filter.

  --min-net-size value
      Specify the minimum size in bytes of the network datagrams to filter.

  --min-udp-size value
      Specify the minimum size in bytes of the UDP datagrams to filter.

  --net-size value
      Specify the exact size in bytes of the network datagrams to filter. This
      option is incompatible with --min-net-size and --max-net-size.

  --only-label label1[-label2]
      Invoke this plugin only for packets with any of the specified labels.
      Other packets are transparently passed to the next plugin, without going
      through this one. Several --only-label options may be specified. See also
      option --except-label. This is a generic option which is defined in all
      packet processing plugins.

  -o filename
  --output-file filename
      Specify that the extracted UDP datagrams are saved in this file. The UDP
      messages are written without any encapsulation.

  -p pid1[-pid2]
  --pid pid1[-pid2]
      Extract MPE datagrams from these PID's. Several -p or --pid options may
      be specified. When no PID is specified, use all PID's carrying MPE which
      are properly declared in the signalization.

  -r ip-address[:port]
  --redirect ip-address[:port]
      With --udp-forward, redirect all UDP datagrams to the specified socket
      address. By default, all datagrams are forwarded to their original
      destination address. If you specify a redirected address, it is
      recommended to use --destination to filter a specific stream. If the port
      is not specified, the original port is used.

  --skip value
      With --output-file, --dump-datagram, --dump-udp or --log-hexa-line,
      specify the initial number of bytes to skip. By default, save or dump
      from the beginning.

  -s ip-address[:port]
  --source ip-address[:port]
      Filter MPE UDP datagrams based on the specified source IP address.

  --sync-layout
      With --log, display the layout of 0x47 sync bytes in the UDP payload.

  --ttl value
      With --udp-forward, specify the TTL (Time-To-Live) socket option. The
      actual option is either "Unicast TTL" or "Multicast TTL", depending on
      the destination address. By default, use the same TTL as specified in the
      received MPE encapsulated datagram.

  -u
  --udp-forward
      Forward all received MPE encapsulated UDP datagrams on the local network.
      By default, the destination address and port of each datagram is left
      unchanged. The source address of the forwarded datagrams will be the
      address of the local machine.

  --udp-size value
      Specify the exact size in bytes of the UDP datagrams to filter. This
      option is incompatible with --min-udp-size and --max-udp-size.

